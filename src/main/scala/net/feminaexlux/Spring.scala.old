package net.feminaexlux

import java.util.Properties
import javax.persistence.EntityManagerFactory
import javax.sql.DataSource
import javax.transaction.TransactionManager

import com.mysql.cj.jdbc.MysqlDataSource
import com.mysql.jdbc.Driver
import net.feminaexlux.model.dao.UserDao
import org.hibernate.dialect.MySQLDialect
import org.hibernate.jpa.HibernatePersistenceProvider
import org.springframework.context.annotation.{Bean, Configuration}
import org.springframework.instrument.classloading.ReflectiveLoadTimeWeaver
import org.springframework.orm.hibernate5.{HibernateTransactionManager, LocalSessionFactoryBean}
import org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean
import org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter
import org.springframework.transaction.PlatformTransactionManager
import org.springframework.transaction.annotation.EnableTransactionManagement

/**
  * Created by lani on 5/7/17.
  */
@Configuration
@EnableTransactionManagement
class Spring {
  @Bean def dataSource(): DataSource = {
    val dataSource = new MysqlDataSource
    dataSource setUrl "jdbc:mysql://192.168.0.108/shimmers?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=PST"
    dataSource setUser "shimmers"
    dataSource setPassword "shimmers"
    dataSource
  }

  @Bean def factoryBean(dataSource: DataSource): EntityManagerFactory = {
    val properties = new Properties
    properties put("javax.persistence.jdbc.driver", classOf[Driver].getName)
    properties put("hibernate.connection.driver_class", classOf[Driver].getName)
    properties put("hibernate.dialect", classOf[MySQLDialect].getName)

    val entityManagerFactoryBean = new LocalContainerEntityManagerFactoryBean
    entityManagerFactoryBean setPersistenceUnitName "fxl"
    entityManagerFactoryBean setPersistenceProviderClass classOf[HibernatePersistenceProvider]
    entityManagerFactoryBean setJpaProperties properties
    entityManagerFactoryBean setJpaVendorAdapter new HibernateJpaVendorAdapter
    entityManagerFactoryBean setPackagesToScan "net.feminaexlux.model"
    entityManagerFactoryBean setDataSource dataSource
    entityManagerFactoryBean setLoadTimeWeaver new ReflectiveLoadTimeWeaver()
    entityManagerFactoryBean afterPropertiesSet()

    entityManagerFactoryBean getObject
  }

  @Bean def transactionManager(dataSource: DataSource): PlatformTransactionManager = {
    val properties = new Properties
    properties put("hibernate.dialect", classOf[MySQLDialect].getName)
    properties put("hibernate.show_sql", "true")

    val sessionFactory = new LocalSessionFactoryBean
    sessionFactory setDataSource dataSource
    sessionFactory setHibernateProperties properties
    sessionFactory setPackagesToScan "net.feminaexlux.model"
    sessionFactory afterPropertiesSet()

    val manager = new HibernateTransactionManager()
    manager setSessionFactory(sessionFactory getObject)
    manager afterPropertiesSet()
    manager
  }

  @Bean def userDao(): UserDao = {
    new UserDao
  }
}
